/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import com.lassie.player.model.Room;	final internal class RoomControl extends ProcessCommand	{		/**		* <room target="roomId" grid="gridId" sountrack1="file:Class"/>		*/		public function RoomControl():void		{			super();		}		override public function toString():String {			return "[RoomControl]";		}	//-------------------------------------------------	// Control methods	//-------------------------------------------------		override protected function _run():void		{			var $room:Room = Targeting.getRoom( _sourceXML.@target );			// validate room.			if (!!$room)			{				if (_sourceXML.@grid != undefined) $room.grid = _sourceXML.@grid;				if (_sourceXML.@soundtrack1 != undefined) $room.soundtrack1 = _sourceXML.@soundtrack1;				if (_sourceXML.@soundtrack2 != undefined) $room.soundtrack2 = _sourceXML.@soundtrack2;				if (_sourceXML.@addCoreLibs != undefined) {					$room.coreLibs = _add($room.coreLibs, _sourceXML.@addCoreLibs);				}				if (_sourceXML.@removeCoreLibs != undefined) {					$room.coreLibs = _remove($room.coreLibs, _sourceXML.@removeCoreLibs);				}				if (_sourceXML.@addVoiceLibs != undefined) {					$room.voiceLibs = _add($room.voiceLibs, _sourceXML.@addVoiceLibs);				}				if (_sourceXML.@removeVoiceLibs != undefined) {					$room.voiceLibs = _remove($room.voiceLibs, _sourceXML.@removeVoiceLibs);				}			}			else			{				// invalid room.				trace(this +" room target could not be resolved.");			}			// finish unless waiting for a complete event.			_complete();		}		override public function skip():void {			_run();		}		/**		* Adds items into the a CSV list if they are not blank and not already present within the list.		*/		private function _add($src:String, $add:String):String		{			var $source:Array = $src.split(",");			var $append:Array = $add.split(",");			for each (var $item:String in $append) {				var $index:int = $source.indexOf($item);				if ($item != "" && $index < 0) $source.push($item);			}			return $source.join(",");		}		/**		* Removes all instances of a list of items from a CSV list.		*/		private function _remove($src:String, $rm:String):String		{			var $source:Array = $src.split(",");			var $remove:Array = $rm.split(",");			for each (var $filter:String in $remove) {				var $index:int = $source.indexOf($filter);				if ($index > -1) $source.splice($index, 1);			}			return $source.join(",");		}	}}