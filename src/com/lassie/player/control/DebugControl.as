/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import com.lassie.utils.XmlUtil;		/**	* DebugControl provides an API for enabling and sending messages to the debugger window.	* INSTANT.	*/	final internal class DebugControl extends ProcessCommand	{		/**		* <debug enabled="1" stats="1" display="show"/>		*/		public function DebugControl():void		{			super();		}	//-------------------------------------------------	// Process methods	//-------------------------------------------------			override public function toString():String {			return "[DebugControl]";		}			//-------------------------------------------------	// Control methods	//-------------------------------------------------			override protected function _run():void		{			// enable stats output			if (_sourceXML.@stats != undefined) {				gameDebug.statsEnabled = XmlUtil.parseBoolean(_sourceXML.@stats);			}						// enable debugger console			if (_sourceXML.@enabled != undefined) {				gameDebug.enabled = XmlUtil.parseBoolean(_sourceXML.@enabled);			}						// set debugger display			if (_sourceXML.@display != undefined) {				var $display:String = _sourceXML.@display;								switch ($display) {					case KeyValues.SHOW: gameDebug.show(); return;					case KeyValues.HIDE: gameDebug.hide(); return;					case KeyValues.TOGGLE: gameDebug.toggle(); return;				}			}						// echos a message into the debugger output			if (_sourceXML.@echo != undefined) {				gameDebug.echo( _sourceXML.@echo.toString() );			}						_complete();		}				override public function stop():void {			// none.		}				override public function resume():void {			// none.		}				override public function skip():void {			_run();		}	}}