/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import com.lassie.utils.XmlUtil;		/**	* The CursorControl manages configuration of the game's cursor display.	* INSTANT.	*/	final internal class CursorControl extends ProcessCommand	{		/**		* <cursor roomMouse="1/0" gameMouse="1/0" visible="1/0" item="" displaySet=""/>		*/		public function CursorControl():void		{			super();		}		override public function toString():String {			return "[CursorControl]";		}			//-------------------------------------------------	// Control methods	//-------------------------------------------------			override protected function _run():void		{			if (_sourceXML.@gameMouse != undefined) {				// enabled / disable game mouse response.				gameDisplay.mouseChildren = XmlUtil.parseBoolean(_sourceXML.@gameMouse);			}			else if (_sourceXML.@roomMouse != undefined) {				// enabled / disable cursor mouse response.				gameRoom.mouseChildren = XmlUtil.parseBoolean(_sourceXML.@roomMouse);			}						// show / hide cursor.			if (_sourceXML.@visible != undefined) {				uiCursor.visible = XmlUtil.parseBoolean(_sourceXML.@visible);			}						// load / clear item cursor.			if (_sourceXML.@item != undefined) {				if (_sourceXML.@item == "") uiCursor.clearItem();				else uiCursor.loadItem( _sourceXML.@item );			}						// set the item cursor frame label.			if (_sourceXML.@itemFrame != undefined) {				uiCursor.setItemFrame( _sourceXML.@itemFrame );			}						// set cursor display set.			if (_sourceXML.@displaySet != undefined) {				//uiCursor.displaySet = XmlUtil.parseBoolean(_sourceXML.@visible);			}						if (_sourceXML.@wait != undefined) {				// sets the cursor's "wait" status.				uiCursor.wait = XmlUtil.parseBoolean(_sourceXML.@wait);			}			else if (_sourceXML.@hover != undefined) {				// sets the cursor's "hover" status.				uiCursor.hover = XmlUtil.parseBoolean(_sourceXML.@hover);			}						_complete();		}				override public function stop():void {			// none.		}				override public function resume():void {			// none.		}				override public function skip():void {			_run();		}	}}