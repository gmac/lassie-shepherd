/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import com.lassie.utils.XmlUtil;	final internal class MethodControl extends ProcessCommand	{		/**		* <method define="sfoo" param1="" param2="">		*   <!-- child scripts -->		*   <cursor visible="$param1"/>		*   <method clear="@call"/>		* </method>		*/		public function MethodControl():void {			super();		}		override public function toString():String {			return "[MethodControl]";		}		override protected function _run():void		{			if (_sourceXML.@call != undefined) {				// calls a method stored within the methodology table.				var $branch:Boolean = XmlUtil.parseBoolean(_sourceXML.@branch, true);				var $script:XML = gameModel.methodology.getMethod( _sourceXML.@call.toString(), _sourceXML.@* );				if (!!$script) gameController.processXML( $script, $branch );			}			else if (_sourceXML.@define != undefined) {				// defines a method within the methodology table.				gameModel.methodology.setMethod( _sourceXML.@define, _sourceXML );			}			else if (_sourceXML.@clear != undefined) {				// clears a method from the methodology table.				gameModel.methodology.clearMethod( _sourceXML.@clear );			}			_complete();		}		override public function skip():void {			_run();		}	}}