/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import com.lassie.player.logic.LogicParser;	final internal class LogicControl extends ProcessCommand	{		/**		* <logic eval="(a EQ b) AND (1 GT 0)"><doThis/></logic>		*/		public function LogicControl():void		{			super();		}		override public function toString():String {			return "[LogicControl]";		}	//-------------------------------------------------	// Control methods	//-------------------------------------------------		override protected function _run():void		{			// Parse a logical epxression.			if (_sourceXML.@parse != undefined) {				LogicParser.parse(_sourceXML.@parse);			}			// Evaluate a conditional expression.			if (_sourceXML.@eval != undefined)			{				// Has parent eval				// Evaluate and run the main node block.				if (LogicParser.eval(_sourceXML.@eval)) {					_runBlock(_sourceXML.children());				}			}			else			{				// No parent eval: proceed with "if" blocks.				const IF:String = "if";				const ELSEIF:String = "elseif";				const ELSE:String = "else";				if (_sourceXML.hasOwnProperty(IF))				{					var $if:XML = XML(_sourceXML[IF]);					var $success:Boolean = false;					// IF					// if the "if" block succeeds,					if (LogicParser.eval($if.@eval))					{						// run the "if" block children and mark operation as successful.						_runBlock($if.children());						$success = true;					}					// ELSEIF					else if (_sourceXML.hasOwnProperty(ELSEIF))					{						// if logic has "elseif" statements, run each.						var $elseif:XMLList = _sourceXML[ELSEIF];						for each ($if in $elseif)						{							// parse each statement							if (LogicParser.eval($if.@eval))							{								// run block and mark if operation is successful.								_runBlock($if.children());								$success = true;								break;							}						}					}					// ELSE					// if no operations have been successful and there is an "else" statement defined,					if (!$success && _sourceXML.hasOwnProperty(ELSE))					{						$if = XML(_sourceXML[ELSE]);						_runBlock($if.children());					}				}			}			_complete();		}		override public function stop():void {			// none.		}		override public function resume():void {			// none.		}		override public function skip():void {			_run();		}		/**		* Runs a list block of XML commands.		*/		private function _runBlock($commands:XMLList):void		{			var $run:XML = new XML('<'+ CommandName.GENERIC +'>'+ $commands.toXMLString() +'</'+ CommandName.GENERIC +'>');			parentProcess.addScript($run, true);		}	}}