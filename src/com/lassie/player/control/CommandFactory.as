/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import com.lassie.player.display.GameDebugger;		final internal class CommandFactory	{		/**		* Builds a table of command classes keyed by command name.		*/		static private function _getCommandTable():Object		{			var $command:Object = new Object();			$command[ CommandName.CACHE ] = CacheControl;			$command[ CommandName.CONTEXT ] = ContextControl;			$command[ CommandName.CURSOR ] = CursorControl;			$command[ CommandName.CURTAIN ] = CurtainControl;			$command[ CommandName.DATA ] = DataControl;			$command[ CommandName.DEBUG ] = DebugControl;			$command[ CommandName.DIALOGUE ] = DialogueControl;			$command[ CommandName.FLASH ] = FlashControl;			$command[ CommandName.GAME ] = GameControl;			$command[ CommandName.KEYBOARD ] = KeyboardControl;			$command[ CommandName.INVENTORY ] = InventoryControl;			$command[ CommandName.LAYER ] = LayerControl;			$command[ CommandName.LAYER_BLEND ] = LayerBlendControl;			$command[ CommandName.LAYER_SPRITE ] = LayerSpriteControl;			$command[ CommandName.LAYER_STATE ] = LayerStateControl;			$command[ CommandName.LAYER_TWEEN ] = LayerTweenControl;			$command[ CommandName.LIBRARY ] = LibraryControl;			$command[ CommandName.LOGIC ] = LogicControl;			$command[ CommandName.MENU ] = MenuControl;			$command[ CommandName.METHODOLOGY ] = MethodControl;			$command[ CommandName.NET ] = NetControl;			$command[ CommandName.PROCESS ] = ProcessControl;			$command[ CommandName.PUPPET ] = PuppetControl;			$command[ CommandName.PUPPET_TWEEN ] = PuppetTweenControl;			$command[ CommandName.ROOM ] = RoomControl;			$command[ CommandName.SCRIPT ] = ScriptControl;			$command[ CommandName.SCRIPT_PARSE ] = ScriptParseControl;			$command[ CommandName.SCROLL ] = ScrollControl;			$command[ CommandName.SEQUENCE ] = SequenceControl;			$command[ CommandName.SOUND ] = SoundControl;			$command[ CommandName.TREE ] = TreeControl;			$command[ CommandName.UI ] = UIControl;			$command[ CommandName.WAIT ] = WaitControl;			$command[ CommandName.WEB_LINK ] = WebLinkControl;			return $command;		}				/**		* Stores a table of command classes.		*/		static private var _command:Object = _getCommandTable();				/**		* Creates a new process command.		*/		static public function create($xml:XML, $process:Process):ProcessCommand		{			// Get XML command's name.			var $id:String = $xml.name();			// If a command definition exists,			if (_command.hasOwnProperty($id))			{				try {					// try to construct and initialize a new command object.					var $command:ProcessCommand = new _command[$id]() as ProcessCommand;					$command.init($xml, $process);					return $command;				}				catch ($error:Error) {					GameDebugger.getInstance().echo('[CommandFactory] Error while trying to create command "'+ $id +'"');					//trace('>> '+ $error.getStackTrace());				}			}			return null;		}	}}