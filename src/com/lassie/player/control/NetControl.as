/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.control{	import flash.net.navigateToURL;	import flash.net.sendToURL;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	final internal class NetControl extends ProcessCommand	{		/**		* <net openURL="http://www.blah.com" target="_blank" pingURL="http://www.blah.com" method="GET/POST" vars="name1:value1,name2:value2"/>		*/		public function NetControl():void		{			super();		}	//-------------------------------------------------	// Process methods	//-------------------------------------------------		override public function toString():String {			return "[NetControl]";		}	//-------------------------------------------------	// Control methods	//-------------------------------------------------		override protected function _run():void		{			var $vars:URLVariables = new URLVariables();			var $request:URLRequest;			// Collect all provided variables.			if (_sourceXML.@vars != undefined)			{				var $list:Array = _sourceXML.@vars.split(",");				for each (var $item:String in $list) {					var $pair:Array = $item.split(":");					if ($pair.length > 1) $vars[ $pair[0] ] = $pair[1];				}			}			// opens a URL			if (_sourceXML.@openURL != undefined)			{				$request = new URLRequest(_sourceXML.@openURL);				$request.data = $vars;				var $target:String = (_sourceXML.@target != undefined) ? _sourceXML.@target : "_blank";				navigateToURL($request, $target);			}			// pings a URL			if (_sourceXML.@pingURL != undefined)			{				var $method:String = _sourceXML.@method;				if ($method != URLRequestMethod.GET && $method != URLRequestMethod.POST) $method = URLRequestMethod.GET;				$request = new URLRequest(_sourceXML.@pingURL);				$request.method = $method;				$request.data = $vars;				sendToURL($request);			}			_complete();		}	}}