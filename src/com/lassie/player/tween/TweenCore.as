/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.tween{	/**	* TweenCore is an API designed to interface the Lassie Player with any tween engine.	* The system is currently built to integrate with TweenLite and Tweener.	* By setting the static "_tweenEngine" property on the TweenCore class,	* the proxied engine will be integrated and all other engine codebases will be excluded.	*	* Supports:	* - ease	* - delay	* - autoAlpha	* - onUpdate, onUpdateParams	* - onComplete, onCompleteParams	* - autoDestroy = true/false; << NOTE: This overrides the "onComplete" param.	*/	public class TweenCore	{		static private var _tweenEngine:TweenProxy = new TweenLiteProxy();		/**		* Specifies the name of the tween engine being used.		*/		static public function get engine():String {			return _tweenEngine.name;		}		static public function set engine($name:String):void		{			// only set new tween engine if not already configured.			if ($name != engine) {				// validate and set the new tween engine reference.				switch ($name) {					case TweenEngineName.TWEEN_LITE: _tweenEngine = new TweenLiteProxy(); break;					case TweenEngineName.TWEENER: _tweenEngine = new TweenerProxy(); break;				}			}		}		/**		* Initiates a Tween.		*/		static public function tween($target:Object, $seconds:Number, $params:Object):void {			_tweenEngine.tween($target, $seconds, $params);		}		/**		* Initiates a tween and returns a control object for managing the tween's playback.		*/		static public function getTween($target:Object, $seconds:Number, $params:Object):TweenPlayer {			return _tweenEngine.getTween($target, $seconds, $params);		}		/**		* Gets a specific type of easing based on class and method descriptions.		*/		static public function getEase($type:String, $method:String):Function {			return _tweenEngine.getEase($type, $method);		}		/**		* Parses an ease function based on a two-component value, formatted as "type:method".		*/		static public function parseEase($value:String):Function {			var $component:Array = ($value + ":").split(":");			return _tweenEngine.getEase( $component[0], $component[1] );		}		/**		* Cancels all tweens applied to a specific object.		*/		static public function killTweensOf($target:Object):void {			_tweenEngine.killTweensOf($target);		}	}}