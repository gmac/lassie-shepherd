/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.tween{	import com.caurina.transitions.Tweener;	import com.caurina.transitions.Equations;	import com.caurina.transitions.properties.DisplayShortcuts;	final public class TweenerProxy extends TweenProxy	{		public function TweenerProxy():void {			super();			// create "autoAlpha" property within the Tweener framework.			Tweener.registerSpecialProperty("autoAlpha", DisplayShortcuts._autoAlpha_get, DisplayShortcuts._autoAlpha_set);		}		/**		* Specifies the name of the tween engine being proxied.		*/		override public function get name():String {			return TweenEngineName.TWEENER;		}		/**		* Initiates a Tween.		*/		override public function tween($target:Object, $seconds:Number, $params:Object):void		{			Tweener.addTween($target, _formatParams($params, $seconds));		}		/**		* Gets a tween controller.		*/		override public function getTween($target:Object, $seconds:Number, $params:Object):TweenPlayer {			return new TweenerPlayer($target, _formatParams($params, $seconds));		}		/**		* Gets a Tweener easing equation.		*/		override public function getEase($type:String, $method:String):Function		{			var $eq:String = $method + $type.substr(0, 1).toUpperCase() + $type.substr(1);			if (Equations[ $eq ] is Function) return Equations[ $eq ];			return null;		}		/**		* Kills tweens on a specific object.		*/		override public function killTweensOf($target:Object):void {			Tweener.removeTweens($target);		}		/**		* Formats the provided parameters to match the Tweener API.		*/		private function _formatParams($params:Object, $seconds:Number):Object		{			// assign duration to the params object.			$params.time = $seconds;			// rename "ease" method to "transition"			if ($params.hasOwnProperty("ease"))			{				$params.transition = $params.ease;				delete $params.ease;			}			return $params;		}	}}