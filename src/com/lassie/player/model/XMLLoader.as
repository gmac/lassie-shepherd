/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.model{	import flash.events.EventDispatcher;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;	import com.lassie.utils.EncryptUtil;		final public class XMLLoader extends EventDispatcher	{		static public var baseURL:String = "";		static public var allowCaching:Boolean = false;				// public		public var id:String = "";		public var data:XML;				public function XMLLoader():void {			super();		}				/**		* Destroys the loader to optimize for garbage collection.		*/		public function destroy():void {			data = null;		}		/**		* Starts the load of an XML file.		*/		public function load($filename:String, $noCache:Boolean=false):void		{			id = $filename;			var $qs:String = ($noCache && !XMLLoader.allowCaching) ? "?"+ new Date().getTime() + Math.random() : "";			var $io:URLLoader = new URLLoader();			$io.addEventListener(Event.COMPLETE, this._onLoadComplete);			$io.load(new URLRequest(XMLLoader.baseURL + "xml/"+id+".xml" + $qs));		}		/** @private called upon completion of the XML load */		private function _onLoadComplete($event:Event):void		{			// cleanup loader operation			var $io:URLLoader = $event.target as URLLoader;			$io.removeEventListener(Event.COMPLETE, this._onLoadComplete);						// collect loaded data and decrypt if obfuscated.			var $raw:String = $io.data;			if ($raw.substr(0, 1) != "<") {				$raw = EncryptUtil.decrypt( $raw );			}						// collect data and notify of complete			data = new XML( $raw );			dispatchEvent(new Event(Event.COMPLETE));		}	}}