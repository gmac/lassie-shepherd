/*** Lassie Engine Game Player* @author Greg MacWilliam.*/package com.lassie.player.model{	/**	* KeyStroke manages configuration of a keyboard key.	*/	final public class KeyStroke extends DataModel	{		public function KeyStroke($key:String):void {			super($key);			cacheEnabled = true;		}		/**		* Destroys the keyboard methodology table configuration.		*/		override public function destroy():void {			cacheEnabled = false;		}		/**		* Refreshes the keystroke with the latest data from the cache.		*/		override public function refresh():void {			_cache = gameCache.getSession().getNamespace("keyboard").getNamespace(id);			update();		}		/**		* Specifies if the key stroke has a valid script assigned to it.		*/		public function get hasScript():Boolean {			return scriptText != "";		}		/**		* Specifies if the key stroke is enabled.		*/		public function get enabled():Boolean {			return _cache.pull("enabled", true);		}		public function set enabled($enable:Boolean):void {			_cache.push("enabled", $enable, true);		}		/**		* Specifies if the key stroke's script should process as a branch.		*/		public function get branch():Boolean {			return _cache.pull("branch", false);		}		public function set branch($enable:Boolean):void {			_cache.push("branch", $enable, false);		}		/**		* Specifies the script text assigned to the key stroke.		*/		public function get scriptText():String {			return unescape( _cache.pull("script", "") );		}		public function set scriptText($txt:String):void {			_cache.push("script", escape($txt), "");		}		/**		* Accesses the XML script assigned to the key stroke.		*/		public function get script():XML {			return new XML(scriptText);		}		public function set script($xml:XML):void {			scriptText = $xml.toXMLString();		}	}}