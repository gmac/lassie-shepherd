package com.lassie.utils{	public final class XmlUtil	{		/**		* Parses a Boolean value from an XML attribute.		*/		public static function parseBoolean($value:String, $defaultValue:Boolean=false):Boolean {			if ($value == null || $value == "") return $defaultValue;			return ($value == "1" || $value == "true");		}				/**		* Parses an XMLList of attribute values onto an existing object.		* @param target  The target object to parse values onto.		* @param atts  An XMLList of attributes to parse onto the object.		* @param constraint  An object with properties to define which fields are allowed to be parsed. If null, target acts at the constraint.		* @param prefix  A prefix to apply to all parsed attributes.		*/		public static function parseAttributes($target:Object, $atts:XMLList, $constraint:Object=null):Object		{			if ($constraint == null) $constraint = $target;						// loop through all attributes			for (var $j:int = 0; $j < $atts.length(); $j++)			{				// get attribute's property name				var $prop:String = $atts[$j].name();								// if target has a corresponding attribute name				if ($constraint.hasOwnProperty($prop))				{					if ($target[$prop] is Boolean) {						// parse booleans as true for a value of "1" or "true"						$target[$prop] = XmlUtil.parseBoolean($atts[$j]);					}					else {						// directly assign all other attributes						// Flash XML parsing handles dataType conversion.						$target[$prop] = $atts[$j];					}				}			}			// return the updated target object.			return $target;		}				/**		* Creates an Object modeled from a list of XML attributes.		*/		static public function parseObject($atts:XMLList):Object		{			var $obj:Object = new Object();			for (var $j:int = 0; $j < $atts.length(); $j++) {				$obj[ String($atts[$j].name()) ] = $atts[$j];			}			return $obj;		}				/**		* Tests if an attribute is present within an XML list.		*/		static public function hasAttribute($xml:XML, $field:String):Boolean		{			var $member:Boolean = false;						try {				$member = ($xml.@[ $field ] != undefined);			}			catch ($error:Error) {				$member = false;			}			return $member;		}	}}