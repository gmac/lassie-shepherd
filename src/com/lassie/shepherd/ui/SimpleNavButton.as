package com.lassie.shepherd.ui{	import com.lassie.shepherd.core.LSClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.MovieClip;		public class SimpleNavButton extends LSClip	{		public var value:String = "";		public var iconDisplay:MovieClip;				private var _selected:Boolean = false;		private var _hovering:Boolean = false;			// --------------------------------------------------	//  Constructor	// --------------------------------------------------				public function SimpleNavButton():void		{			super();						stop();			iconDisplay.stop();						tabEnabled = false;			mouseChildren = false;			buttonMode = true;			useHandCursor = true;		}				protected override function init():void		{			addEventListener(MouseEvent.MOUSE_OVER, this.handleMouseOver);			addEventListener(MouseEvent.MOUSE_OUT, this.handleMouseOut);		}				protected override function uninit():void		{			removeEventListener(MouseEvent.MOUSE_OVER, this.handleMouseOver);			removeEventListener(MouseEvent.MOUSE_OUT, this.handleMouseOut);		}			// --------------------------------------------------	//  Getter / setters	// --------------------------------------------------				public function get selected():Boolean		{			return _selected;		}				public function set selected(val:Boolean):void		{			_selected = val;			gotoAndStop(val ? 3 : (_hovering ? 2 : 1));		}				public override function get enabled():Boolean		{			return mouseEnabled;		}				public override function set enabled(val:Boolean):void		{			alpha = val ? 1 : 0.25;			mouseEnabled = val;		}				public function get icon():String		{			return iconDisplay.currentLabel;		}				public function set icon(ico:String):void		{			iconDisplay.gotoAndStop(ico);		}			// --------------------------------------------------	//  Event handlers	// --------------------------------------------------			private function handleMouseOver(evt:MouseEvent):void		{			_hovering = true;			gotoAndStop(_selected ? 3 : 2);		}				private function handleMouseOut(evt:MouseEvent):void		{			_hovering = false;			gotoAndStop(_selected ? 3 : 1);		}	}}