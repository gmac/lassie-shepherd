package com.lassie.shepherd.ui.buttons{	import flash.display.Sprite;	import flash.events.MouseEvent;	import com.lassie.shepherd.ui.buttons.ActionButton;	import com.lassie.shepherd.ui.buttons.ActionButtonIcons;	import com.lassie.shepherd.events.UIEvent;		public class AddDeleteClone extends Sprite	{		public var addButton:ActionButton;		public var deleteButton:ActionButton;		public var cloneButton:ActionButton;				private var _enabled:Boolean = true;		private var _addEnable:Boolean = true;		private var _deleteEnable:Boolean = true;		private var _cloneEnable:Boolean = true;				public function AddDeleteClone():void		{			super();						addButton.icon = ActionButtonIcons.ADD;			addButton.addEventListener(MouseEvent.CLICK, this.handleAdd);						deleteButton.icon = ActionButtonIcons.DELETE;			deleteButton.addEventListener(MouseEvent.CLICK, this.handleDelete);						cloneButton.icon = ActionButtonIcons.COPY;			cloneButton.addEventListener(MouseEvent.CLICK, this.handleCopy);		}				private function handleAdd(evt:MouseEvent):void		{			dispatchEvent(new UIEvent(UIEvent.ADD));		}				private function handleDelete(evt:MouseEvent):void		{			dispatchEvent(new UIEvent(UIEvent.DELETE));		}				private function handleCopy(evt:MouseEvent):void		{			dispatchEvent(new UIEvent(UIEvent.COPY));		}				public function get enabled():Boolean		{			return _enabled;		}				public function set enabled(val:Boolean):void		{			_enabled = val;						if (!_enabled)			{				_addEnable = addButton.enabled;				_deleteEnable = deleteButton.enabled;				_cloneEnable = cloneButton.enabled;				addButton.enabled = deleteButton.enabled = cloneButton.enabled = _enabled;			}			else			{				addButton.enabled = _addEnable;				deleteButton.enabled = _deleteEnable;				cloneButton.enabled = _cloneEnable;			}		}	}}