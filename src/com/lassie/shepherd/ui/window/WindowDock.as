package com.lassie.shepherd.ui.window{	internal final class WindowDock	{		private static var DOCK_LEFT:int = 200;				private static var _windows:Array = new Array();				public static function setWindowIndex(window:FloatingWindow, i:int, shareSlot:Boolean=false):void		{			var cur:int = _windows.indexOf(window);						// remove any existing reference to the window			if (cur > -1)			{				_windows.splice(cur, 1);			}						// insert window into array			if (i < _windows.length)			{				_windows.splice(i, 0, window);			}			else			{				_windows.push(window);			}						organizeTabs();		}				public static function organizeTabs():void		{			var leftX:int = DOCK_LEFT;						for (var j:int = 0; j < _windows.length; j++)			{				var window:FloatingWindow = _windows[j] as FloatingWindow;				if (window.active)				{					window.setDockX(leftX - window.tabsLeftX);					leftX += (window.tabsRightX - window.tabsLeftX) + 5;				}			}		}	}}