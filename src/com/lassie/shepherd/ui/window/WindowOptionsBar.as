package com.lassie.shepherd.ui.window{	import flash.display.Sprite;	import flash.display.GradientType;	import flash.geom.Matrix;	import flash.events.Event;	import flash.events.MouseEvent;		public class WindowOptionsBar extends Sprite	{		private var _left:int = 16;		private var _selectedOption:String = "";			// --------------------------------------------------	//  Constructor	// --------------------------------------------------				public function WindowOptionsBar():void		{			super();		}	// --------------------------------------------------	//  Public methods	// --------------------------------------------------			public function redraw(w:int):void		{			graphics.clear();			var matrix:Matrix = new Matrix();			matrix.createGradientBox(w, FloatingWindow.OPTIONS_HEIGHT, Math.PI/2);			graphics.beginGradientFill(GradientType.LINEAR, [0x333333, 0x000000], [1, 1], [0, 255], matrix);			graphics.drawRect(0, 0, w, FloatingWindow.OPTIONS_HEIGHT);			graphics.endFill();			graphics.lineStyle(1, 0x222222, 1, true);			graphics.lineTo(0, FloatingWindow.OPTIONS_HEIGHT);			graphics.lineTo(w, FloatingWindow.OPTIONS_HEIGHT);		}				public function get selectedOption():String		{			return _selectedOption;		}				public function addItem(txt:String):void		{			var opt:OptionTab = new OptionTab(txt);			opt.x = _left;			opt.y = 2;			_left += opt.width + 15;			addChild(opt);			opt.addEventListener(MouseEvent.MOUSE_DOWN, this.onSelectOption);		}				public function selectItem(label:String):void		{			// if label is not already selected			if (label != _selectedOption)			{				// select item tab and signal change				_selectedOption = label;								for (var j:int = 0; j < numChildren; j++)				{					var opt:OptionTab = OptionTab(getChildAt(j));					opt.selected = (opt.label == _selectedOption);				}				dispatchEvent(new Event(Event.CHANGE));			}		}			// --------------------------------------------------	//  Event handlers	// --------------------------------------------------				private function onSelectOption(evt:MouseEvent):void		{			selectItem(OptionTab(evt.currentTarget).label);		}	}}// --------------------------------------------------//  WINDOW OPTIONS TAB// --------------------------------------------------import com.lassie.shepherd.ui.window.FloatingWindow;import flash.display.Sprite;import flash.display.GradientType;import flash.geom.Matrix;import flash.events.Event;import flash.events.MouseEvent;import flash.text.*;internal final class OptionTab extends Sprite{	private var _label:TextField;	private var _normal:TextFormat;	private var _over:TextFormat;	private var _selected:Boolean = false;		// --------------------------------------------------	//  Constructor	// --------------------------------------------------		public function OptionTab(label:String):void	{		super();		mouseChildren = false;		buttonMode = true;		useHandCursor = true;				_normal = new TextFormat("_sans", 0x999999, true);		_normal.color = 0x999999;		_normal.size = 11;		_over = new TextFormat();		_over.color = 0xFFFFFF;				_label = new TextField();		_label.type = TextFieldType.DYNAMIC;		_label.autoSize = TextFieldAutoSize.LEFT;		_label.selectable = false;		_label.defaultTextFormat = _normal;		_label.text = label;		addChild(_label);				addEventListener(MouseEvent.MOUSE_OVER, this.onMouseOver);		addEventListener(MouseEvent.MOUSE_OUT, this.onMouseOut);	}		// --------------------------------------------------	//  Public methods	// --------------------------------------------------		public function get label():String	{		return _label.text;	}		public function get selected():Boolean	{		return _selected;	}		public function set selected(val:Boolean):void	{		_selected = val;		redraw();	}		// --------------------------------------------------	//  Private methods	// --------------------------------------------------		private function redraw():void	{		graphics.clear();				var paddingX:int = 5;		var tabHeight:int = FloatingWindow.OPTIONS_HEIGHT-2;		var tabPadding:int = 3;		var w:int = _label.width + (paddingX * 2);				if (_selected)		{			var matrix:Matrix = new Matrix();			matrix.createGradientBox(w, tabHeight, Math.PI/2);			graphics.beginGradientFill(GradientType.LINEAR, [0x666666, 0x333333], [1, 1], [0, 255], matrix);			graphics.drawRoundRect(-paddingX, 0, w, tabHeight+tabPadding, 7);			graphics.endFill();			_label.setTextFormat(_over);		}		else		{			_label.setTextFormat(_normal);		}	}		// --------------------------------------------------	//  Event handlers	// --------------------------------------------------		private function onMouseOver(evt:Event):void	{		_label.setTextFormat(_over);	}		private function onMouseOut(evt:Event):void	{		if (!_selected)		{			_label.setTextFormat(_normal);		}	}}