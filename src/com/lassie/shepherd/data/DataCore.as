package com.lassie.shepherd.data{	import flash.events.EventDispatcher;	import com.lassie.shepherd.core.IDataCore;		public class DataCore extends EventDispatcher implements IDataCore	{		public var id:String = "";		public var lockId:Boolean = false;		public var timestamp:String="";		public var coreLibs:String="";		public var voiceLibs:String="";		public var voiceInc:int = 0;		public var rawData:String="";				public var titleLinkage:int = 0;		public var actLinkage:int = 0;		public var diaLinkage:int = 0;				public function DataCore():void		{			super();		}				public function getFiles():void		{			// override in sub-class		}				public function load(file:String):void		{			// override in sub-class		}				public function remove(file:String):void		{			// override in sub-class		}				public function save():void		{			// override in sub-class		}				public function getCoreLibs():String		{			return coreLibs; // interface access method		}				public function addCoreLib(file:String):Boolean		{			var imgs:Array = coreLibs.split(",");						if (imgs.indexOf(file) < 0)			{				imgs.push(file);				coreLibs = imgs.join(",");				return true;			}			return false;		}				public function getVoiceLibs():String		{			return voiceLibs; // interface access method		}				public function addVoiceLib(file:String):Boolean		{			var snds:Array = voiceLibs.split(",");						if (snds.indexOf(file) < 0)			{				snds.push(file);				voiceLibs = snds.join(",");				return true;			}			return false;		}				public function getRawData():String		{			return rawData; // interface access method		}				public function addRawData(file:String):Boolean		{			var raw:Array = rawData.split(",");						if (raw.indexOf(file) < 0)			{				raw.push(file);				rawData = raw.join(",");				return true;			}			return false;		}	}}