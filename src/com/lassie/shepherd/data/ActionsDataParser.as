package com.lassie.shepherd.data{	import com.lassie.utils.ObjectUtil;		public final class ActionsDataParser	{		static public var voiceIncrement:int = 0;		static public var reassignVoiceIncrement:Boolean = false;				public static function toInteractionData(dat:Object):InteractionData		{			try			{				var i:InteractionData = new InteractionData();				ObjectUtil.assimilate(i, dat);								// purge assimilated dialogue array				i.dialogue = new Array();								for (var j:int = 0; j < dat.dialogue.length; j++)				{					i.dialogue.push(toDialogueData(dat.dialogue[j]));				}				return i;			}			catch(e:Error)			{				trace("Could not create InteractionData");			}			return null;		}				public static function toDialogueData(dat:Object):DialogueData		{			try			{				var d:DialogueData = new DialogueData();				ObjectUtil.assimilate(d, dat);								// apply new voice increment when:				// - sound reference is blank				// - OR:				// - when forcing a new voice reference.				if (d.sound == "" || reassignVoiceIncrement) d.sound = (voiceIncrement++).toString();								return d;			}			catch(e:Error)			{				trace("Could not create DialogueData");			}			return null;		}	}}