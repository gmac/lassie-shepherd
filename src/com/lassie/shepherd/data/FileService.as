package com.lassie.shepherd.data{	public final class FileService	{		/**		* SET THE LOCALHOST FILE SERVICE TO USE WHILE DEVELOPING...		* This should point to a valid Lassie Shepherd project folder served up through Apache.		* For running a local PHP/Apache environment, check out MAMP (Mac) or WAMP (Windows)		*/		public static const DEV_SERVICE_URL:String = "http://localhost:8888/projects/wmyt/";		public static var FILE_SERVICE:String = "data/";				public static var PATH_GAMES:String = "games";		public static var PATH_ROOMS:String = "rooms";		public static var PATH_RAW_DATA:String = "raw";		public static var PATH_LIB_ROOT:String = "../lib";		public static var PATH_LIB_VOICE:String = "../voice";				public static const EXT_SWF:String = "swf";		public static const EXT_ROOM:String = "room";		public static const EXT_GAME:String = "game";		public static const EXT_XML:String = "xml";		public static const EXT_JPG:String = "jpg";		public static const EXT_PNG:String = "png";		public static const EXT_GIF:String = "gif";		public static const EXT_ALL:String = "*";				private static var _all:Array = new Array(EXT_SWF, EXT_ROOM, EXT_GAME);		public static function filterReturn(csv:String, extType:String=EXT_ALL, filePath:String=""):String		{			// clean and format list of returned files			// allow file return to be limited to a single extention type						var files:Array = csv.split("files=").join("").split(",");			var valid:Array = new Array();						// clean up file path			filePath = filePath.split("../").join("");			if (filePath != "") filePath += "/";						for each (var j:String in files)			{				var ext:String = j.split(".").pop();								if ((extType == EXT_ALL && _all.indexOf(ext.toLowerCase()) > -1) || (extType != EXT_ALL && ext == extType))				{					valid.push(filePath + j);				}			}						return valid.join(",");		}	}}