package com.lassie.shepherd.editors.room.layout{	import flash.display.Sprite;	import com.lassie.shepherd.editors.room.RoomController;	import com.lassie.shepherd.core.LSSprite;	import com.lassie.shepherd.display.EditorDimensions;	import com.lassie.shepherd.editors.room.interfaces.ILayout;	import com.lassie.shepherd.editors.room.layout.layering.LayerControl;	import com.lassie.shepherd.editors.room.layout.walkarea.BoxControl;	import com.lassie.shepherd.editors.room.layout.walkarea.NodeControl;	import com.lassie.shepherd.editors.room.layout.layering.TargetControl;	import com.lassie.shepherd.editors.room.layout.filters.FilterControl;		public final class RoomLayout extends LSSprite implements ILayout	{		private var _layers:LayerControl;		private var _targets:TargetControl;		private var _boxes:BoxControl;		private var _nodes:NodeControl;		private var _filters:FilterControl;				public function RoomLayout():void		{			super();						// place layout relative to controls			x = EditorDimensions.ROOM_EDITOR_SIDEBAR;			y = EditorDimensions.ROOM_EDITOR_HEADER;						// layering control			_layers = new LayerControl();			addChild(_layers);						// walkarea box control			_boxes = new BoxControl();			addChild(_boxes);						// filter matrix control			_filters = new FilterControl();			addChild(_filters);						// layer target points control			_targets = new TargetControl();			addChild(_targets);						// walkarea node control			_nodes = new NodeControl();			addChild(_nodes);						// create room interface			RoomController.instance.setLayouts(this, _layers, _targets, _nodes, _boxes, _filters);		}				protected override function launch():void		{			var w:int = stage.stageWidth-x;			var h:int = stage.stageHeight-y;			RoomController.setViewport(0, 0, w, h);		}	}}