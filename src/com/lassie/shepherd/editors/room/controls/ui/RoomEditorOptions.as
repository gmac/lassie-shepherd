package com.lassie.shepherd.editors.room.controls.ui{	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import com.lassie.shepherd.core.LSSprite;	import com.lassie.shepherd.events.ShepherdEvent;	import com.lassie.shepherd.ui.buttons.LabeledActionButton;	import com.lassie.shepherd.ui.buttons.ActionButtonIcons;		public class RoomEditorOptions extends LSSprite	{		public var saveBttn:LabeledActionButton;		public var exitBttn:LabeledActionButton;				public function RoomEditorOptions():void		{			super();						saveBttn.label = "Save Room";			saveBttn.icon = ActionButtonIcons.LOAD;			exitBttn.label = "Return to Setup";			exitBttn.icon = ActionButtonIcons.COPY;			saveBttn.textColor = exitBttn.textColor = 0xFFFFFF;						// configure save and exit buttons			saveBttn.addEventListener(MouseEvent.CLICK, this._onSaveRoom);			exitBttn.addEventListener(MouseEvent.CLICK, this._onExitRoom);		}				public function align(w:int):void		{			exitBttn.x = saveBttn.x + saveBttn.width + 10;			x = Math.round(w - width - 15);		}				private function _onSaveRoom(evt:Event):void		{			lsServices.status("Saving...");			lsRoomData.addEventListener(ShepherdEvent.ROOM_DATA_SAVED, this._onSaveComplete);			lsRoomData.save();		}				private function _onSaveComplete(evt:Event):void		{			lsRoomData.removeEventListener(ShepherdEvent.ROOM_DATA_SAVED, this._onSaveComplete);			lsServices.close();		}				private function _onExitRoom(evt:Event):void		{			dispatchEvent(new ShepherdEvent(ShepherdEvent.OPEN_GAME_EDITOR, true));		}	}}