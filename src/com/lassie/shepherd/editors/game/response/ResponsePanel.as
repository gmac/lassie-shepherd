package com.lassie.shepherd.editors.game.response{	import com.lassie.shepherd.data.game.ResponseRecord;	import com.lassie.shepherd.editors.game.ui.RecordsPanel;	import com.lassie.shepherd.editors.game.ui.PanelDisplays;	import com.lassie.shepherd.editors.game.actions.GameActionController;	import com.lassie.shepherd.editors.game.actions.GameDialogueEditor;	import com.lassie.shepherd.editors.game.actions.GameScriptEditor;	import com.lassie.shepherd.ui.ToggleButton;	import com.lassie.shepherd.ui.HelpLabel;	import fl.controls.ComboBox;	import fl.controls.TextInput;	import flash.events.Event;	public final class ResponsePanel extends RecordsPanel	{		public var textId:TextInput;		public var lockId:ToggleButton;		public var interactionController:GameActionController;		public var dialogueEditor:GameDialogueEditor;		public var scriptEditor:GameScriptEditor;		public var idHelp:HelpLabel;			// --------------------------------------------------	//  Constructor	// --------------------------------------------------			public function ResponsePanel():void		{			super(new ResponseRecordSet(), "Default Actor Responses", PanelDisplays.RESPONSE);						textId.addEventListener(Event.CHANGE, this.onCaptureId);			lockId.addEventListener(Event.CHANGE, this.onCaptureLockId);			interactionController.dialogue = dialogueEditor;			interactionController.script = scriptEditor;		}				protected override function launch():void		{			idHelp.key = "response_id";		}				internal function get selectedResponse():ResponseRecord		{			return dataProvider.selectedRecord as ResponseRecord;		}			// --------------------------------------------------	//  Protected methods	// --------------------------------------------------				protected override function setFieldEnable(val:Boolean):void		{			textId.enabled = val;			lockId.enabled = val;			interactionController.enabled = val;			dialogueEditor.enabled = val;			scriptEditor.enabled = val;						if (!val)			{				textId.text = "";			}		}				protected override function populateRecord():void		{			var record:ResponseRecord = selectedResponse;			textId.text = record.id;			textId.enabled = !record.lockId;			lockId.selected = record.lockId;			interactionController.data = record.actions;			interactionController.populate();		}			// --------------------------------------------------	//  Event handlers	// --------------------------------------------------				private function onCaptureId(evt:Event):void		{			selectedResponse.id = textId.text;			dataProvider.refreshDisplay();		}				private function onCaptureLockId(evt:Event):void		{			selectedResponse.lockId = lockId.selected;			textId.enabled = !lockId.selected;		}	}}