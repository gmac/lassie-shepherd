package com.lassie.shepherd.editors.game.ui{	import com.lassie.shepherd.core.LSSprite;	import com.lassie.shepherd.editors.game.GameRecordSet;	import com.lassie.shepherd.ui.buttons.AddDeleteClone;	import com.lassie.shepherd.events.UIEvent;	import flash.events.Event;	import fl.controls.ComboBox;		public final class RecordsController extends LSSprite	{		public var recordSelect:ComboBox;		public var recordActions:AddDeleteClone;				private var _dataProvider:GameRecordSet;			// --------------------------------------------------	//  Constructor	// --------------------------------------------------				public function RecordsController(dat:GameRecordSet=null):void		{			super();						x = 400;			y = 6;						_dataProvider = dat;			_dataProvider.addEventListener(UIEvent.REFRESH, this.onRecordSetChange);			recordActions.addEventListener(UIEvent.ADD, this.onAdd);			recordActions.addEventListener(UIEvent.COPY, this.onCopy);			recordActions.addEventListener(UIEvent.DELETE, this.onDelete);			recordSelect.addEventListener(Event.CHANGE, this.onRecordSelect);		}			// --------------------------------------------------	//  Public properties	// --------------------------------------------------				public function populate():void		{			visible = _dataProvider.enabled;			var hasRecords:Boolean = (_dataProvider.numRecords > 0);			recordActions.deleteButton.enabled = hasRecords;			recordActions.cloneButton.enabled = hasRecords;			recordSelect.enabled = hasRecords;			recordSelect.rowCount = 15;			recordSelect.removeAll();						if (hasRecords)			{				recordSelect.dataProvider.concat(_dataProvider.recordsMenu)			}			else			{				recordSelect.addItem({label:"[no records]", data:0});			}						recordSelect.selectedIndex = _dataProvider.selectedIndex;		}			// --------------------------------------------------	//  Event handlers	// --------------------------------------------------			private function onRecordSetChange(evt:Event):void		{			populate();		}				private function onRecordSelect(evt:Event):void		{			_dataProvider.selectedIndex = recordSelect.selectedIndex;		}				private function onAdd(evt:Event):void		{			_dataProvider.addRecord();		}				private function onCopy(evt:Event):void		{			_dataProvider.copyRecord();		}				private function onDelete(evt:Event):void		{			_dataProvider.removeRecord();		}	}}