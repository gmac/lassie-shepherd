package com.lassie.shepherd.editors.game.cast{	import com.lassie.shepherd.editors.game.GameRecordSet;	import com.lassie.shepherd.data.game.GameDataParser;	import com.lassie.shepherd.data.game.CastRecord;	import com.lassie.shepherd.data.game.Record;	import com.lassie.utils.ObjectUtil;	import flash.events.Event;		public final class CastRecordSet extends GameRecordSet	{		public function CastRecordSet():void		{			super();		}				public override function get recordsMenu():Array		{			var $default:String = lsGameData.defaultActor;						// returns an array of combobox menu items			// formatted as {label:"", data:""};						var menu:Array = new Array();						for each (var i:Record in _records)			{				var $asterisk:String = ($default == i.id) ? "*" : "";				menu.push({label:i.id + $asterisk, data:i.id});			}			return menu;		}				public override function addRecord():void		{			fileNewRecord(new CastRecord("Actor" + numRecords));		}				public override function copyRecord():void		{			var copy:CastRecord = GameDataParser.toCastRecord(ObjectUtil.clone(selectedRecord));			copy.id += "Copy";			fileNewRecord(copy);		}				public override function removeRecord():void		{			if (numRecords > 1)			{				// record ID before removal.				var $id:String = selectedRecord.id;				super.removeRecord();								// if removed record was the game default, set first entry as new default.				if ($id == lsGameData.defaultActor) {					lsGameData.defaultActor = recordsList[0];				}			}			else {				lsServices.alert("You may not delete the only actor definition. A minimum of one actor is required.");			}		}	}}