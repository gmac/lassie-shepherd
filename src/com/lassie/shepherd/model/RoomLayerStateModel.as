/*** Lassie Shepherd Editor* @author Greg MacWilliam.*/package com.lassie.shepherd.model{	import com.lassie.shepherd.core.LSDispatcher;		final public class RoomLayerStateModel extends LSDispatcher	{		private var _data:Object;				public function RoomLayerStateModel($data:Object=null):void {			super();			_data = (!!$data) ? _load( $data ) : new Object();		}				/**		* Loads data into the model.		*/		private function _load($data:Object):Object {			// do stuff.			return new Object();		}				/**		* Specifies the layer type.		*/		public function get type():String {			return "";		}		public function set type($val:String):void {					}				/**		* Specifies the layer's Id name.		*/		public function get id():String {			return "";		}		public function set id($val:String):void {					}			/**		* Specifies if the layer's ID is locked within the editor.		*/		public function get lockId():Boolean {			return false;		}		public function set lockId($val:Boolean):void {					}				/**		* Specifies if the layer's position is locked within the editor.		*/		public function get lockPosition():Boolean {			return false;		}		public function set lockPosition($val:Boolean):void {					}				/**		* Specifies if the layer is visible within the game.		*/		public function get gameVisible():Boolean {			return true;		}		public function set gameVisible($val:Boolean):void {					}				/**		* Specifies if the layer is visible within the editor.		*/		public function get editorVisible():Boolean {			return true;		}		public function set editorVisible($val:Boolean):void {					}				/**		* Specifies if the layer is highlighted within the editor.		*/		public function get editorHilite():Boolean {			return false;		}		public function set editorHilite($val:Boolean):void {					}				/**		* Specifies the layer's default state within the game.		*/		public function get gameState():String {					}		public function set gameState($val:String):void {					}				/**		* Specifies the layer's display state within the editor.		*/		public function get editorState():String {					}		public function set editorState($val:String):void {					}				/**		* Specifies the layer's image asset display.		*/		public function get asset():String {					}		public function set asset($val:String):void {					}				/**		* Specifies the layer's depth index.		*/		public function get depth():int {			return 0;		}		public function set depth($val:int):void {					}				/**		* Adds a state to the layer.		*/		public function addState($id:String):void {					}				/**		* Gets a state by numeric index.		*/		public function getStateAt($index:int):Object {			return null;		}				/**		* Specifies the number of states within the model.		*/		public function get numStates():int {			return 0;		}	}}/*public var id:String="main";public var lockId:Boolean=false;public var title:String="";public var vars:String="";public var cursor:String="";public var image:Boolean=true;public var frame:int=1;public var blend:String=BlendMode.NORMAL;public var prefix:String="";public var imgX:int=0;public var imgY:int=0;public var imgW:Number=1;public var imgH:Number=1;public var hit:Boolean=true;public var hitShape:String=LayerHitShapes.RECT;public var hitX:int=0;public var hitY:int=0;public var hitW:int=100;public var hitH:int=100;public var x:int=-1;public var y:int=-1;public var bind:String="";public var floorX:int=100;public var floorY:int=100;public var opacity:Number=1;public var rate:int=7;public var rotate:int=0;public var onclick:int=-1;public var angle:int=0;public var float:Boolean=false; public var mouse:Boolean=false;public var cache:Boolean=false;public var parallax:String="";public var marginL:int=300;public var marginR:int=300;public var marginT:int=300;public var marginB:int=300;public var scale:String="";public var color:String="";public var speed:String="";public var focus:String="";public var previewScale:Boolean=true;public var previewColor:Boolean=true;public var previewFocus:Boolean=true;public var diaColor:uint=0xFFFFFF;public var actions:Array = new Array();public var actionsIndex:int=-1;public var items:Array = new Array();public var itemsIndex:int=-1;*/