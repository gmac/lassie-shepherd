/*** Lassie Shepherd Editor* @author Greg MacWilliam.*/package com.lassie.shepherd.core{	import com.lassie.shepherd.Shepherd;	import com.lassie.shepherd.data.ApplicationData;	import com.lassie.shepherd.data.game.GameData;	import com.lassie.shepherd.data.room.RoomData;	import flash.display.MovieClip;	import flash.events.Event;		public class LSClip extends MovieClip implements ILSFramework	{		private var __init:Boolean = false;				public function LSClip():void		{			super();			addEventListener(Event.ADDED_TO_STAGE, this._onAddedToStage, false, 0, true);			addEventListener(Event.REMOVED_FROM_STAGE, this._onRemovedFromStage, false, 0, true);		}				/**		* Sprite destroyer. Always call before purging a Sprite asset!		*/		public function dispose():void		{			removeEventListener(Event.ADDED_TO_STAGE, this._onAddedToStage);			removeEventListener(Event.REMOVED_FROM_STAGE, this._onRemovedFromStage);		}			//-------------------------------------------------	// API Methods	//-------------------------------------------------				public function get lsResourcePath():String {			return Shepherd.resourcePath;		}				public function get lsLibrary():ILibraryManager {			return LibraryManager.instance;		}				public function get lsServices():IServicePackage {			return Shepherd.services;		}				public function get lsGameEditor():IGameEditor {			return Shepherd.gameEditor;		}				public function get lsRoomEditor():IRoomEditor {			return Shepherd.roomEditor;		}				public function get lsAppData():ApplicationData {			return ApplicationData.instance;		}				public function get lsGameData():GameData {			return GameData.instance;		}				public function get lsRoomData():RoomData {			return RoomData.instance;		}			//-------------------------------------------------	// Initializer methods	//-------------------------------------------------				/**		* First initialize: called the first time the sprite is added to stage.		*/		protected function launch():void		{			// override in sub-class		}				/**		* Initialize: called each time the sprite is added to stage.		*/		protected function init():void		{			// override in sub-class		}				/**		* Un-initialize: called each time the sprite is removed from stage.		*/		protected function uninit():void		{			// override in sub-class		}				/**		* Removes all children from the display list		*/		protected function _removeAllChildren():void		{			while (numChildren > 0) removeChildAt(0);		}			//-------------------------------------------------	// Event handler	//-------------------------------------------------				private function _onAddedToStage(evt:Event):void		{			if (!__init) {				__init = true;				launch();			}			init();		}				private function _onRemovedFromStage(evt:Event):void		{			uninit();		}	}}