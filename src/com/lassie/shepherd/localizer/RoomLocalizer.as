package com.lassie.shepherd.localizer{	import flash.events.Event;	import com.lassie.shepherd.data.*;		internal class RoomLocalizer extends BaseLocalizer	{		protected var _rooms:Array;				public function RoomLocalizer():void {			super();			_rooms = new Array();		}				/**		* Loads a list of rooms into the application.		*/		public function getRoomsList($list:String="*") {			if ($list == "*") {				var $io:FileIO = new FileIO();				$io.addEventListener(Event.COMPLETE, this._onFileListLoad);				$io.request(FileService.FILE_SERVICE, "rooms");			} else {				_rooms = $list.split(",");				dispatchEvent(new Event(LocalizerSetup.SETUP_LOAD_COMPLETE));			}		}					/**			* Exports the new room listed in the room queue.			*/			private function _onFileListLoad($event:Event):void {				var $io:FileIO = FileIO($event.target);				$io.removeEventListener(Event.COMPLETE, this._onFileListLoad);				_rooms = FileService.filterReturn($io.data, FileService.EXT_ROOM).split(",");								for (var $i:int = 0; $i < _rooms.length; $i++) {					_rooms[$i] = (_rooms[$i]).replace('.'+FileService.EXT_ROOM, '');				}				dispatchEvent(new Event(LocalizerSetup.SETUP_LOAD_COMPLETE));			}	}}