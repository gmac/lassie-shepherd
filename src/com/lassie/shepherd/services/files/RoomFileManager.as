package com.lassie.shepherd.services.files{	import com.lassie.shepherd.data.room.RoomData;	import com.lassie.shepherd.events.ShepherdEvent;	import flash.events.Event;		public final class RoomFileManager extends FileManagerWindow	{	// --------------------------------------------------	//  Constructor	// --------------------------------------------------			public function RoomFileManager():void		{			super();		}				override protected function loadFilesList():void		{			fileList.removeAll();			lsRoomData.addEventListener(ShepherdEvent.ROOM_LIST_LOAD, this._onFilesListLoad);			lsRoomData.getFiles();			setStatus("Getting data...");		}				override protected function createNewFile():void		{			RoomData.refresh();			lsRoomData.id = fileName.text;			lsRoomData.addEventListener(ShepherdEvent.ROOM_LIST_LOAD, this._onFilesListLoad);			lsRoomData.save();			setStatus("Creating...");		}				override protected function copyFile():void		{			lsRoomData.addEventListener(ShepherdEvent.ROOM_DATA_LOADED, this._onCopyLoad);			lsRoomData.load(fileList.selectedItem.data);			setStatus("Copy in progress...");		}				override protected function deleteFile():void		{			lsRoomData.addEventListener(ShepherdEvent.ROOM_LIST_LOAD, this._onFilesListLoad);			lsRoomData.remove(fileList.selectedItem.data);			setStatus("Deleting...");		}		override protected function loadData():void		{			lsRoomData.addEventListener(ShepherdEvent.ROOM_DATA_LOADED, this._onRoomDataLoad);			lsRoomData.load(fileList.selectedItem.data);			setStatus("Loading...");		}				private function _onCopyLoad(evt:Event):void		{			lsRoomData.removeEventListener(ShepherdEvent.ROOM_DATA_LOADED, this._onCopyLoad);			lsRoomData.id = fileName.text;			lsRoomData.addEventListener(ShepherdEvent.ROOM_LIST_LOAD, this._onFilesListLoad);			lsRoomData.save();			setStatus("Saving copy...");		}				private function _onFilesListLoad(evt:Event):void		{			lsRoomData.removeEventListener(ShepherdEvent.ROOM_LIST_LOAD, this._onFilesListLoad);			setFileList(RoomData.fileList);			setMainMenu();		}				private function _onRoomDataLoad(evt:Event):void		{			lsRoomData.removeEventListener(ShepherdEvent.ROOM_DATA_LOADED, this._onRoomDataLoad);			close();		}	}}