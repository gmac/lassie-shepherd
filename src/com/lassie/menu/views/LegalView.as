/*** Lassie Engine* @author Greg MacWilliam.*/package com.lassie.menu.views{	import com.lassie.menu.views.MenuView;	import com.lassie.menu.controls.HeaderControl;	import com.lassie.menu.controls.ToggleControl;	import com.lassie.menu.controls.ButtonControl;	import com.lassie.menu.ui.ScrollPane;	import com.lassie.menu.ui.UIStyle;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.geom.Rectangle;		/**	* Lassie Player game menu; legal panel controller.	*/	public class LegalView extends PanelView	{		// stage instances		public var uiLegalHeader:HeaderControl;		public var uiLegalText:TextField;		public var uiLegalConfirm:ToggleControl;		public var uiLegalDone:ButtonControl;				private var _scrollPane:ScrollPane;				public function LegalView():void {			super();						var $style:UIStyle = _getUIStyle();			$style.scrollEnabled = true;			$style.scrollDragEnabled = false;						_scrollPane = new ScrollPane($style);			_scrollPane.x = uiLegalText.x;			_scrollPane.y = uiLegalText.y;			_scrollPane.frameWidth = uiLegalText.width + 10;			_scrollPane.height = uiLegalText.height;			addChild(_scrollPane);		}				/**		* Creates and returns a new UIStyle object.		* Override this method to customize style appearance.		*/		protected function _getUIStyle():UIStyle {			return new UIStyle();		}				/**		* Configures event listeners on all UI controls.		*/		override protected function _enableControls($enable:Boolean):void		{			if (!!lassiePlayer) {				if ($enable) {					uiLegalConfirm.addEventListener(Event.CHANGE, this._onConfirmChange, false, 0, true);					uiLegalDone.addEventListener(MouseEvent.CLICK, this._onDone, false, 0, true);				}				else {					uiLegalConfirm.removeEventListener(Event.CHANGE, this._onConfirmChange);					uiLegalDone.removeEventListener(MouseEvent.CLICK, this._onDone);				}			}		}				/**		* Populates all control label texts.		*/		override protected function _setLabels():void		{						uiLegalHeader.label = menuFormat.legalHeader;			uiLegalConfirm.label = menuFormat.legalConfirmControl;			uiLegalDone.label = menuFormat.legalButton;						var $legal:String = menuFormat.legalText;			$legal = $legal.replace(new RegExp("\n", "g"), "");			$legal = $legal.replace(new RegExp("\r", "g"), "");			uiLegalText.htmlText = $legal;			_scrollPane.content = uiLegalText;		}				/**		* Populates the view with all current Lassie Player settings.		*/		override protected function _populate():void		{			uiLegalConfirm.selected = false;			uiLegalDone.mouseEnabled = false;		}			//--------------------------------------------------	// CheckBox Handlers	//--------------------------------------------------			/** @private called upon toggling the "I Agree..." checkbox. */		private function _onConfirmChange($event:Event):void {			uiLegalDone.mouseEnabled = uiLegalConfirm.selected;			if (!!lassiePlayer) lassiePlayer.hasAcceptedLegal = uiLegalConfirm.selected;		}			//--------------------------------------------------	// Button Handlers	//--------------------------------------------------				/** @private called upon click of the "done" button. */		private function _onDone($event:Event):void {			gameMenu.setView( MenuView.MAIN );		}	}}