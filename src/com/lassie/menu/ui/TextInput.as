package com.lassie.menu.ui{	import flash.text.TextField;	import flash.text.TextFieldType;	import flash.display.Shape;	import flash.events.Event;		final public class TextInput extends UIComponent	{		private var _field:TextField;				public function TextInput($style:UIStyle):void {			super();			_field = new TextField();			_field.type = TextFieldType.INPUT;			_field.selectable = true;			_field.multiline = false;			_field.wordWrap = false;			_field.addEventListener(Event.CHANGE, this._onTextChange, false, 0, true);			addChild(_field);						style = $style;		}				/**		* Destroys the component to optimize for garbage collection.		*/		override public function destroy():void		{			super.destroy();			removeChild(_field);			_field.removeEventListener(Event.CHANGE, this._onTextChange);			_field = null;		}				/**		* Specifies the text content of the input's text field.		*/		public function get text():String {			return _field.text;		}		public function set text($txt:String):void {			_field.text = $txt;		}				/**		* Sets focus to the TextField's input.		*/		public function setFocus():void {			if (!!stage) stage.focus = _field;		}				/** @private redraws the component with all current style settings. */		override protected function _redraw():void		{			_field.defaultTextFormat = style.cellTextFormat;			_field.embedFonts = false; // TODO << wire this up to the style.			_field.x = style.cellTextIndent;			_field.y = Math.floor((style.cellHeight / 2) - (_field.textHeight / 2)) - 2;			_field.width = width - (_field.x * 2);			_field.height = height - _field.y;						graphics.clear();						// draw top border			graphics.beginFill(style.cellBorderColorTop, 1);			graphics.drawRect(0, 0, width, style.cellBorderSizeTop);			graphics.endFill();						// draw main background			graphics.beginFill(style.cellBgColorNormal, 1);			graphics.drawRect(0, style.cellBorderSizeTop, width, style.cellHeight - style.cellBorderSizeTop - style.cellBorderSizeBottom);			graphics.endFill();						// draw bottom border			graphics.beginFill(style.cellBorderColorBottom, 1);			graphics.drawRect(0, style.cellHeight - style.cellBorderSizeBottom, width, style.cellBorderSizeBottom);			graphics.endFill();		}			//-------------------------------------------------	// Event handlers	//-------------------------------------------------				/** @private called upon changing the text within the component. */		private function _onTextChange($event:Event):void {			dispatchEvent(new Event(Event.CHANGE));		}	}}