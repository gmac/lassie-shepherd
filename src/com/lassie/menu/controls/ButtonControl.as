/*** Lassie Engine* @author Greg MacWilliam.*/package com.lassie.menu.controls{	import com.lassie.menu.LPGameMenu;	import com.lassie.events.LassieMenuEvent;	import flash.display.MovieClip;	import flash.text.TextField;	import flash.events.MouseEvent;	import flash.events.Event;		/**	* Lassie Player game menu button control.	*/	public class ButtonControl extends MovieClip	{		public const OUT:uint = 1;		public const OVER:uint = 2;		public const DOWN:uint = 3;		public const DISABLED:uint = 4;				public var uiLabelText:TextField;				private var _enabled:Boolean = true;		private var _hovering:Boolean = false;				public function ButtonControl():void		{			super();			stop();						buttonMode = true;			useHandCursor = true;			mouseChildren = false;			addEventListener(MouseEvent.MOUSE_OVER, this._onMouseOver, false, 0, true);			addEventListener(MouseEvent.MOUSE_OUT, this._onMouseOut, false, 0, true);			addEventListener(MouseEvent.MOUSE_DOWN, this._onMouseDown, false, 0, true);			addEventListener(MouseEvent.MOUSE_UP, this._onMouseOver, false, 0, true);		}				/**		* Specifies the button label text.		*/		public function get label():String {			return uiLabelText.text;		}		public function set label($label:String):void {			uiLabelText.text = $label.toUpperCase();		}				/**		* Overriding the mouseEnabled setting to reflect a visual state change while unresponsive.		*/		override public function set mouseEnabled($enable:Boolean):void {			super.mouseEnabled = _enabled = $enable;			gotoAndStop(_enabled ? (_hovering ? OVER : OUT) : DISABLED);		}				/** @private called upon mouse over on the button. */		private function _onMouseOver($event:Event):void {			_hovering = true;			if (_enabled) {				gotoAndStop( OVER );				dispatchEvent(new LassieMenuEvent(LassieMenuEvent.MOUSE_OVER, true));			}		}				/** @private called upon mouse out or up on the button. */		private function _onMouseOut($event:Event):void {			_hovering = false;			if (_enabled) {				gotoAndStop( OUT );				dispatchEvent(new LassieMenuEvent(LassieMenuEvent.MOUSE_OUT, true));			}		}				/** @private called upon mouse down on the button. */		private function _onMouseDown($event:Event):void {			if (_enabled) gotoAndStop( DOWN );		}	}}