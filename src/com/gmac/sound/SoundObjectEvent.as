/*** SoundObject: sound control framework for ActionScript3.* @author Greg MacWilliam* @version 1.0*//*** Licensed under the MIT License* * Copyright (c) 2009 Greg MacWilliam* * Permission is hereby granted, free of charge, to any person obtaining a copy of* this software and associated documentation files (the "Software"), to deal in* the Software without restriction, including without limitation the rights to* use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of* the Software, and to permit persons to whom the Software is furnished to do so,* subject to the following conditions:* * The above copyright notice and this permission notice shall be included in all* copies or substantial portions of the Software.* * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS* FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR* COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER* IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN* CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.* * http://code.google.com/p/sound-skin/* http://www.opensource.org/licenses/mit-license.php */package com.gmac.sound{	import flash.events.Event;		/**	* SoundObjectEvent defines event type definitions for all objects within the package.	*/	public class SoundObjectEvent extends Event	{	//-------------------------------------------------	// Public events	//-------------------------------------------------			/** The event type dispatched when a sound finishes loading. */		static public const SOUND_LOADED:String = "soundObjectLoaded";				/** The event type dispatched when a sound finishes playing all loops. */		static public const SOUND_COMPLETE:String = "soundObjectPlayed";				/** The event type dispatched each time a sound finishes playing and starts playing a new loop. */		static public const SOUND_LOOP:String = "soundObjectLoop";				/** The event type dispatched when a sound clip finishes a fade transition. */		static public const SOUND_FADE:String = "soundObjectFaded";				/**		* Constructs a new SoundObjectEvent.		* @param type The event type.		* @param bubbles Specifies if the event should bubble.		* @param cancelable Specifies if the event can be canceled.		*/		public function SoundObjectEvent($type:String, $bubbles:Boolean=false, $cancelable:Boolean=false):void		{			super($type, $bubbles, $cancelable);		}	}}